-- CREATE DATABASE BEXH;
USE db;

DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS BANKING;
DROP TABLE IF EXISTS BETS;
DROP TABLE IF EXISTS EVENT;
DROP TABLE IF EXISTS ODDS;
DROP TABLE IF EXISTS USERS;


CREATE TABLE IF NOT EXISTS USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(100) NOT NULL, 
	LAST_NAME VARCHAR(100) NOT NULL,
	BALANCE DECIMAL(13,2) DEFAULT 0.00,
	YEAR_OF_BIRTH INTEGER,
	MONTH_OF_BIRTH INTEGER,
	DAY_OF_BIRTH INTEGER,
	SSN INTEGER,
	EMAIL VARCHAR(100) NOT NULL,
	PHONE INTEGER,
	PWD VARCHAR(100) NOT NULL,
	ADDRESS VARCHAR(500),
	VERIFIED BOOLEAN DEFAULT FALSE,
	PRIMARY KEY(USER_ID),
	CHECK(BALANCE >= 0.00)
) ENGINE=InnoDb;

INSERT INTO USERS(USER_ID, FIRST_NAME, LAST_NAME, BALANCE, EMAIL, PWD)
VALUES
    (1, "seth", "saperstein", 100.00, "seth@gmail.com", "password"),
    (2, "eris", "llangos", 100.00, "eris@gmail.com", "password"),
    (3, "julia", "rosenson", 100.00, "julia@gmail.com", "password");

CREATE TABLE IF NOT EXISTS FRIENDS (
	USER1_ID INTEGER,
	USER2_ID INTEGER,
	FOREIGN KEY (USER1_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY (USER2_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY(USER1_ID, USER2_ID),
	CHECK(USER1_ID!=USER2_ID)
);

INSERT INTO FRIENDS(USER1_ID, USER2_ID)
VALUES
    (1, 2),
    (1, 3);

-- CREATE TRIGGER FRIENDS_TRIGGER
--    BEFORE INSERT ON FRIENDS
--     FOR EACH ROW
--       DECLARE
--         TEMP INTEGER;
--       BEGIN
--         IF :new.USER1_ID > :new.USER2_ID THEN
--           TEMP := :new.USER1_ID;
--           :new.USER1_ID := :new.USER2_ID;
--           :new.USER2_ID := TEMP;
--         END IF;
--     END;
-- /

CREATE TABLE IF NOT EXISTS BANKING (
	PAYMENT_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	PAYMENT_TYPE VARCHAR(100),
	WALLET_ADDR VARCHAR(200),
	ACCOUNT_NUM VARCHAR(200),
	ROUTING_NUM VARCHAR(200),
	CARD_NUM INTEGER,
	EXP_DATE DATE,
	CVV INTEGER,
	ZIP INTEGER,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY(PAYMENT_ID)
);

CREATE TABLE IF NOT EXISTS ODDS(
	EVENT_ID VARCHAR(100) NOT NULL,
	DTM DATETIME NOT NULL,
	ODDS VARCHAR(100) NOT NULL,
	PRIMARY KEY(EVENT_ID, DTM)
);

INSERT INTO ODDS(EVENT_ID, DTM, ODDS)
VALUES
    (1, '2020-09-23 10:30:00', 200),
    (1, '2020-09-24 10:00:00', 100),
    (2, '2020-09-23 10:00:00', -300),
    (2, '2020-09-26 10:00:00', -200),
    (3, '2020-09-24 10:15:00', 100);

CREATE TABLE IF NOT EXISTS EVENT (
	EVENT_ID VARCHAR(100) NOT NULL,
	HOME VARCHAR(100) NOT NULL,
	AWAY VARCHAR(100) NOT NULL,
	SPORT ENUM('basketball', 'football', 'hockey', 'baseball') NOT NULL,
	DTM DATETIME NOT NULL,
	CURRENT_ODDS INTEGER,
	PRIMARY KEY(EVENT_ID)
);

INSERT INTO EVENT(EVENT_ID, HOME, AWAY, SPORT, DTM, CURRENT_ODDS)
VALUES
    (1, 'Team 1', 'Team 2', 'basketball', '2020-10-25 10:00:00', 100),
    (2, 'Team 3', 'Team 4', 'football', '2020-10-26 10:00:00', -200),
    (3, 'Team 5', 'Team 6', 'football', '2020-09-25 10:00:00', 100);


-- ALTER TABLE ODDS ADD CONSTRAINT FK_ODD FOREIGN KEY (EVENT_ID) REFERENCES EVENT;
-- ALTER TABLE EVENT ADD CONSTRAINT FK_EVNT FOREIGN KEY (EVENT_ID, DTM) REFERENCES ODDS

CREATE TABLE IF NOT EXISTS BETS (
	BET_ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID INTEGER NOT NULL,
	EVENT_ID VARCHAR(100) NOT NULL,
	MARKET ENUM('exchange', 'social') NOT NULL,
	ODDS INTEGER NOT NULL,
	AMOUNT DECIMAL(13,2) NOT NULL,
	EST_PROFIT DECIMAL (13,2) NOT NULL,
	ON_TEAM VARCHAR(100) NOT NULL,
	TYPE ENUM('market', 'limit'),
	STATUS ENUM('pending', 'submitted', 'partially executed', 'executed', 'completed', 'pending cancel', 'cancelled', 'pending user', 'pending friend', 'active', 'declined') NOT NULL,
	FRIEND INTEGER,
	DTM DATETIME NOT NULL,
	WON BOOLEAN,
	PAIRED_BET_ID INTEGER REFERENCES BETS(BET_ID),
	PRIMARY KEY(BET_ID),
	FOREIGN KEY (EVENT_ID) REFERENCES EVENT(EVENT_ID),
	FOREIGN KEY (FRIEND) REFERENCES USERS(USER_ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

INSERT INTO BETS(BET_ID, USER_ID, EVENT_ID, MARKET, ODDS, AMOUNT, EST_PROFIT, ON_TEAM, TYPE, STATUS, FRIEND, DTM, WON, PAIRED_BET_ID)
VALUES
    (1, 1, 1, 'exchange', 200, 20.00, 40.00, 'Team 1', 'market', 'executed', NULL, '2020-10-01 10:00:00', NULL, NULL),
    (2, 1, 1, 'social', 100, 10.00, 10.00, 'Team 1', NULL, 'active', 2, '2020-10-01 10:00:00', NULL, 3),
    (3, 2, 1, 'social', -100, 10.00, 10.00, 'Team 2', NULL, 'active', 1, '2020-10-01 10:00:00', NULL, 2),
    (4, 1, 1, 'social', -100, 40.00, 40.00, 'Team 2', NULL, 'pending friend', 3,'2020-10-01 10:00:00',  NULL, 5),
    (5, 3, 1, 'social', 100, 40.00, 40.00, 'Team 1', NULL, 'pending user', 1, '2020-10-01 10:00:00', NULL, 4),
    (6, 1, 3, 'exchange', 100, 10.00, 10.00, 'Team 5', 'market', 'completed', NULL, '2020-09-22 10:00:00', 1, NULL);


